version: '3'
services:
    mcl:
        restart: always
        container_name: mcl
        build: ./mcl
        volumes:
            - ./mcl/logs:/mcl/logs
        command: [ 'java', '-jar', './mcl.jar' ]
        expose:
            - 8765
        networks:
            - mirai_net
    connector:
        restart: always
        container_name: connector
        build: ./custom/connector
        command: [ 'bash', './startApp.sh' ]
        networks:
            - mirai_net
            - db_net
            - backend_net
        expose:
            - 8764
        volumes:
            - ./custom/connector/logs:/root/.npm/_logs
            - ./custom/connector:/origin
            - ./custom/connector/files:/app/files
        depends_on:
            - mcl
    connector_npm_repo:
        restart: always
        container_name: connector_npm_repo
        image: verdaccio/verdaccio:latest
        environment:
            - VERDACCIO_PORT=4873
        ports:
            - "8701:4873"
        volumes:
            - "./custom/connector_npm_repo/storage:/verdaccio/storage"
            - "./custom/connector_npm_repo/conf:/verdaccio/conf"
            - "./custom/connector_npm_repo/plugins:/verdaccio/plugins"
    db:
        container_name: db
        restart: always
        image: mysql:5.7
        environment:
            - MYSQL_ROOT_PASSWORD=123456
            - MYSQL_DATABASE=qqbot
            - TZ=Asia/Shanghai
        command:
            [
                "mysqld",
                "--character-set-server=utf8mb4",
                "--collation-server=utf8mb4_unicode_ci"
            ]
        expose:
            - 3306
        networks:
            - db_net
    backend:
        container_name: backend
        restart: always
        build: ./custom/backend
        command:
            [
                'gunicorn',
                '-w',
                '4',
                '-b',
                '0.0.0.0:5000',
                'main:app'
            ]
        ports:
            - "8702:5000"
        networks:
            - backend_net
networks:
    mirai_net:
        driver: bridge
    db_net:
        driver: bridge
    backend_net:
        driver: bridge
